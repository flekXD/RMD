# Лабораторна робота №6: Firebase Auth & Firestore в React Native (Expo)

Цей проєкт є реалізацією мобільного застосунку для демонстрації повного циклу автентифікації та управління персональними даними користувача з використанням React Native (Expo), Firebase Authentication та Firestore.

## Мета

Набути практичних навичок інтеграції Firebase у React Native застосунок для:
* Автентифікації користувачів (реєстрація, вхід, вихід, відновлення пароля, видалення акаунту).
* Збереження та управління персональними даними (профіль користувача) у Firestore.
* Забезпечення безпеки даних за допомогою Firestore Security Rules.
* Реалізації умовної навігації та управління станом автентифікації.

## Функціональність

* **Реєстрація:** Створення нового користувача за допомогою email та пароля.
* **Вхід:** Автентифікація існуючого користувача.
* **Збереження сесії:** Автоматичне збереження стану входу між запусками застосунку (завдяки Firebase SDK та AsyncStorage).
* **Вихід:** Можливість вийти з системи.
* **Управління профілем:**
    * Перегляд профілю (ім'я, вік, місто).
    * Створення/Оновлення даних профілю через форму редагування.
    * Збереження даних у Firestore (колекція `users`, документ з ID = UID користувача).
* **Захист даних:**
    * Firestore Security Rules дозволяють користувачу читати та змінювати лише власний документ профілю.
    * Клієнтська логіка також використовує UID авторизованого користувача для запитів.
* **Відновлення пароля:** Можливість скинути пароль через email за допомогою Firebase.
* **Видалення акаунту:**
    * Кнопка для видалення акаунту з діалогом підтвердження.
    * Вимога повторної автентифікації перед видаленням.
    * Видалення даних користувача з Firestore та Firebase Authentication.
* **Навігація:**
    * Використання React Navigation.
    * Умовний показ різних екранів (стеків) залежно від статусу автентифікації користувача (`AuthStack` для гостей, `AppStack` для авторизованих).
* **Управління станом:** Використання React Context API (`AuthContext`) для глобального доступу до статусу користувача та функцій автентифікації/профілю.

## Технологічний стек

* React Native (з Expo)
* Firebase Authentication
* Firebase Firestore
* React Navigation (@react-navigation/native, @react-navigation/stack)
* React Context API
* @react-native-async-storage/async-storage (для механізму збереження сесії Firebase)

## Передумови

* Node.js (версія 16 або новіша) та npm / yarn
* Expo CLI (`npm install -g expo-cli` або використання через `npx`)
* Мобільний емулятор/симулятор або фізичний пристрій з встановленим додатком Expo Go.
* Акаунт Google для доступу до Firebase Console.

## Налаштування Firebase

1.  **Створіть проєкт Firebase:** Перейдіть до [Firebase Console](https://console.firebase.google.com/) та створіть новий проєкт.
2.  **Додайте Веб-додаток:**
    * У налаштуваннях проєкту (`Project Settings`) натисніть "Add app" та виберіть іконку веб-додатку (`</>`).
    * Зареєструйте додаток (назву можна обрати довільну).
    * **Скопіюйте об'єкт `firebaseConfig`**. Він знадобиться на наступному кроці.
3.  **Увімкніть Authentication:**
    * У меню ліворуч перейдіть до розділу "Authentication".
    * Перейдіть на вкладку "Sign-in method".
    * Увімкніть провайдера **Email/Password**.
4.  **Налаштуйте Firestore:**
    * У меню ліворуч перейдіть до розділу "Firestore Database".
    * Натисніть "Create database".
    * Оберіть режим **Production mode** (або Test mode для початкової розробки).
    * Оберіть регіон сервера (наприклад, `eur3`).
    * Перейдіть на вкладку **Rules**.
    * Замініть існуючі правила на наступні та натисніть **Publish**:
        ```text
        rules_version = '2';
        service cloud.firestore {
          match /databases/{database}/documents {
            // Дозволити читання/запис лише власнику документу
            match /users/{userId} {
              allow read, update, delete: if request.auth != null && request.auth.uid == userId;
              // Дозволити створення документа лише аутентифікованому користувачу
              // і якщо ID документу співпадає з ID користувача
              allow create: if request.auth != null && request.auth.uid == userId;
            }
          }
        }
        ```

## Запуск проєкту

1.  **Клонуйте репозиторій:**
    ```bash
    git clone <URL_ВАШОГО_РЕПОЗИТОРІЮ>
    cd <НАЗВА_КАТАЛОГУ_ПРОЄКТУ>
    ```
2.  **Встановіть залежності:**
    ```bash
    npm install
    # або
    yarn install
    ```
3.  **Налаштуйте Firebase у проєкті:**
    * Перейдіть до каталогу `firebase/`.
    * Відкрийте файл `config.js`.
    * Вставте **ваш скопійований об'єкт `firebaseConfig`** замість плейсхолдерів `YOUR_...`:
        ```javascript
        const firebaseConfig = {
          apiKey: "ВАШ_API_KEY",
          authDomain: "ВАШ_AUTH_DOMAIN",
          projectId: "ВАШ_PROJECT_ID",
          storageBucket: "ВАШ_STORAGE_BUCKET",
          messagingSenderId: "ВАШ_MESSAGING_SENDER_ID",
          appId: "ВАШ_APP_ID"
        };
        ```
4.  **Запустіть застосунок:**
    ```bash
    npx expo start
    ```
    * У терміналі з'явиться QR-код. Відскануйте його за допомогою додатка Expo Go на вашому телефоні.
    * Або натисніть `a` для запуску на Android емуляторі, `i` для iOS симулятора (якщо встановлені).